# Generated by Django 4.2.4 on 2023-11-03 23:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False,
                                           verbose_name='ID')),
                ('password', models.CharField(max_length=128,
                                              verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True,
                                                    verbose_name='last '
                                                                 'login')),
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text='Designates that '
                              'this user has all '
                              'permissions without '
                              'explicitly assigning them.',
                    verbose_name='superuser status')),
                ('username', models.CharField(
                    error_messages={'unique': 'A user with that '
                                              'username already exists.'},
                    help_text='Required. 150 characters '
                              'or fewer. Letters, digits '
                              'and @/./+/-/_ only.',
                    max_length=150, unique=True,
                    validators=[
                        django.contrib.auth.validators.UnicodeUsernameValidator()
                    ],
                    verbose_name='username')),
                ('first_name', models.CharField(blank=True,
                                                max_length=150,
                                                verbose_name='first name')),
                ('last_name', models.CharField(blank=True,
                                               max_length=150,
                                               verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates '
                                                           'whether the '
                                                           'user can log '
                                                           'into this '
                                                           'admin site.',
                                                 verbose_name='staff status')),
                ('date_joined', models.DateTimeField(
                    default=django.utils.timezone.now,
                    verbose_name='date joined')),
                ('email', models.EmailField(max_length=254,
                                            unique=True,
                                            verbose_name='почта')),
                ('phone', models.CharField(blank=True,
                                           max_length=35, null=True,
                                           verbose_name='Номер телефона')),
                ('country', models.CharField(blank=True,
                                             max_length=35, null=True,
                                             verbose_name='Город')),
                ('avatar', models.ImageField(blank=True, null=True,
                                             upload_to='users/',
                                             verbose_name='аватар')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(
                    blank=True,
                    help_text='The groups this '
                              'user belongs to. '
                              'A user will get all '
                              'permissions granted '
                              'to each of their groups.',
                    related_name='user_set',
                    related_query_name='user',
                    to='auth.group',
                    verbose_name='groups')),
                ('roles', models.ManyToManyField(default='Member',
                                                 to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(
                    blank=True,
                    help_text='Specific permissions '
                              'for this user.',
                    related_name='user_set',
                    related_query_name='user',
                    to='auth.permission',
                    verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('key', models.CharField(max_length=40,
                                         primary_key=True,
                                         serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(
                    on_delete=django.db.models.deletion.CASCADE,
                    related_name='token',
                    to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'токен',
                'verbose_name_plural': 'токены',
            },
        ),
    ]
